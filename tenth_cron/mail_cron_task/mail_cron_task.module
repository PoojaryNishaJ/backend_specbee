<?php

/**
 * @file
 * Short description.
 */

use Drupal\node\Entity\Node;

/**
 * Implements hook_cron().
 */
function mail_cron_task_cron() {
  $last_cron_run = \Drupal::state()->get('lastcronrun');
  $current_timestamp = \Drupal::time()->getRequestTime();

  if (empty($last_cron_run) || ($current_timestamp - $last_cron_run) >= 1) {
    $query = \Drupal::entityQuery('node')

      ->condition('type', 'logs')
      ->condition('created', $last_cron_run, '>')
      ->accessCheck(FALSE);
    $nodes = $query->execute();

    foreach ($nodes as $node) {

      $node = Node::load($node);
      $token_content = ['node' => $node];
      $config = \Drupal::config('mail_cron_task.settings.settings');

      $token_service = \Drupal::token();
      $subject = $token_service->replace($config->get('subject'), $token_content);
      $message = $token_service->replace($config->get('message'), $token_content);

      $mail_params = [
        'subject' => $subject,
        'body' => $message,
      ];

      $to = $node->get('field_email')->value;
      $language_code = \Drupal::currentUser()->getPreferredLangcode();

      \Drupal::service('plugin.manager.mail')->mail('mail_cron_task', 'node_creation', $to, $language_code, $mail_params);
    }
  }

  // Save the current timestamp as the last cron run time.
  \Drupal::state()->set('lastcronrun', $current_timestamp);
}

/**
 * Implements hook_mail().
 */
function mail_cron_task_mail($key, &$message, $params) {
  switch ($key) {
    case 'node_creation':
      $token_service = \Drupal::token();
      $subject = $token_service->replace($params['subject'], ['node' => $params]);
      $body = $token_service->replace($params['body'], ['node' => $params]);
      $message['subject'] = $subject;
      $message['body'][] = $body;
      break;
  }
}
